// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using BookHeaven.Domain;

#nullable disable

namespace BookHeaven.Domain.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240622160338_RemoveLocalSettingsEntity")]
    partial class RemoveLocalSettingsEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Biography")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ASIN")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN10")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN13")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SeriesId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SeriesIndex")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("UUID")
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SeriesId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.BookProgress", b =>
                {
                    b.Property<Guid>("BookProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BookId")
                        .HasColumnType("TEXT");

                    b.Property<int>("BookWordCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Chapter")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("ElapsedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastRead")
                        .HasColumnType("TEXT");

                    b.Property<int>("Page")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PageCountNext")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PageCountPrev")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Progress")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("BookProgressId");

                    b.HasIndex("BookId");

                    b.HasIndex("ProfileId");

                    b.ToTable("BooksProgress");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.Profile", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ProfileId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.ProfileSettings", b =>
                {
                    b.Property<Guid>("ProfileSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("FontSize")
                        .HasColumnType("REAL");

                    b.Property<double>("HorizontalMargin")
                        .HasColumnType("REAL");

                    b.Property<double>("LetterSpacing")
                        .HasColumnType("REAL");

                    b.Property<double>("LineHeight")
                        .HasColumnType("REAL");

                    b.Property<double>("ParagraphSpacing")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SelectedLayout")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TextIndent")
                        .HasColumnType("REAL");

                    b.Property<double>("VerticalMargin")
                        .HasColumnType("REAL");

                    b.Property<double>("WordSpacing")
                        .HasColumnType("REAL");

                    b.HasKey("ProfileSettingsId");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("ProfilesSettings");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.Series", b =>
                {
                    b.Property<Guid>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SeriesId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.Book", b =>
                {
                    b.HasOne("MyBookHeaven.Domain.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId");

                    b.HasOne("MyBookHeaven.Domain.Entities.Series", "Series")
                        .WithMany("Books")
                        .HasForeignKey("SeriesId");

                    b.Navigation("Author");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.BookProgress", b =>
                {
                    b.HasOne("MyBookHeaven.Domain.Entities.Book", "Book")
                        .WithMany("Progresses")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyBookHeaven.Domain.Entities.Profile", "Profile")
                        .WithMany("BooksProgress")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.ProfileSettings", b =>
                {
                    b.HasOne("MyBookHeaven.Domain.Entities.Profile", "Profile")
                        .WithOne("ProfileSettings")
                        .HasForeignKey("MyBookHeaven.Domain.Entities.ProfileSettings", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.Book", b =>
                {
                    b.Navigation("Progresses");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.Profile", b =>
                {
                    b.Navigation("BooksProgress");

                    b.Navigation("ProfileSettings");
                });

            modelBuilder.Entity("MyBookHeaven.Domain.Entities.Series", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
