// <auto-generated />
using System;
using BookHeaven.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookHeaven.Domain.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250929150420_AddFormatToBook")]
    partial class AddFormatToBook
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("BookHeaven.Domain.Entities.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Biography")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Base.Collection", b =>
                {
                    b.Property<Guid>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CollectionType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Pinned")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("CollectionId");

                    b.ToTable("Collections", (string)null);

                    b.HasDiscriminator<int>("CollectionType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ASIN")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Format")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<string>("ISBN10")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN13")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SeriesId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SeriesIndex")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("UUID")
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SeriesId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.BookProgress", b =>
                {
                    b.Property<Guid>("BookProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BookId")
                        .HasColumnType("TEXT");

                    b.Property<int>("BookWordCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Chapter")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("ElapsedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastRead")
                        .HasColumnType("TEXT");

                    b.Property<int>("Page")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PageCountNext")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PageCountPrev")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Progress")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("BookProgressId");

                    b.HasIndex("BookId");

                    b.HasIndex("ProfileId");

                    b.ToTable("BooksProgress");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Font", b =>
                {
                    b.Property<string>("Family")
                        .HasColumnType("TEXT");

                    b.Property<string>("Style")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weight")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Family", "Style", "Weight");

                    b.ToTable("Fonts");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Profile", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProfileId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.ProfileSettings", b =>
                {
                    b.Property<Guid>("ProfileSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FontSize")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HorizontalMargin")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LetterSpacing")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LineHeight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ParagraphSpacing")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SelectedFont")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SelectedLayout")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TextIndent")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VerticalMargin")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("WordSpacing")
                        .HasColumnType("TEXT");

                    b.HasKey("ProfileSettingsId");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("ProfilesSettings");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Series", b =>
                {
                    b.Property<Guid>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SeriesId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BookTag", b =>
                {
                    b.Property<Guid>("BookId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagsTagId")
                        .HasColumnType("TEXT");

                    b.HasKey("BookId", "TagsTagId");

                    b.HasIndex("TagsTagId");

                    b.ToTable("BookTag");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.SimpleCollection", b =>
                {
                    b.HasBaseType("BookHeaven.Domain.Entities.Base.Collection");

                    b.PrimitiveCollection<string>("BookIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.SmartCollection", b =>
                {
                    b.HasBaseType("BookHeaven.Domain.Entities.Base.Collection");

                    b.Property<string>("Authors")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Statuses")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Book", b =>
                {
                    b.HasOne("BookHeaven.Domain.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId");

                    b.HasOne("BookHeaven.Domain.Entities.Series", "Series")
                        .WithMany("Books")
                        .HasForeignKey("SeriesId");

                    b.Navigation("Author");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.BookProgress", b =>
                {
                    b.HasOne("BookHeaven.Domain.Entities.Book", "Book")
                        .WithMany("Progresses")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookHeaven.Domain.Entities.Profile", "Profile")
                        .WithMany("BooksProgress")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.ProfileSettings", b =>
                {
                    b.HasOne("BookHeaven.Domain.Entities.Profile", "Profile")
                        .WithOne("ProfileSettings")
                        .HasForeignKey("BookHeaven.Domain.Entities.ProfileSettings", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("BookTag", b =>
                {
                    b.HasOne("BookHeaven.Domain.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookHeaven.Domain.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Book", b =>
                {
                    b.Navigation("Progresses");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Profile", b =>
                {
                    b.Navigation("BooksProgress");

                    b.Navigation("ProfileSettings");
                });

            modelBuilder.Entity("BookHeaven.Domain.Entities.Series", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
